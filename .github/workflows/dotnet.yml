name: DotNet

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    paths:
    - '**.cs'
    - '**.csproj'
  
env:
   DOTNET_VERSION: '4.5.2'
   ACTIONS_ALLOW_UNSECURE_COMMANDS: true
  

jobs:
  build:
    name: build
    runs-on: windows-latest
    # grants permissions for the artifact to be uploaded
    permissions:
      contents: read
      packages: write
    steps:
    
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can acces it and clones the repo
      - uses: actions/checkout@v3
      # Set up DOT.NET
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        #with:
        #  dotnet-version: ${{env.DOTNET_VERSION}}
      # Set up MSBuild and add to path  
      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1
        
      # [DEBUG]: listing directories after MSBUILD
      - run: ls
      - run: dir
      
      # Set up NuGet to install NuGet dependencies
      - name: Setup NuGet
        uses: NuGet/setup-nuget@v1.0.2
#      - name: Navigate to Workspace
#        run: cd $GITHUB_WORKSPACE

      # Create Build Directory
      - name: Create Build Directory
        run: mkdir _build
      
      # Restore dependencies to the project
      - name: Install dependencies
        run: dotnet restore
      
      # NuGet call to restore packages
      - name: Restore Packages
        run: nuget restore Verademo-dotnet.sln

# Results in an error not finding the solution files to build off, possibly due to being --no-restore
#      - name: Build
#        run: dotnet build 
#     - name: Test
#       run: dotnet test --no-restore --verbosity normal


      # Build the solution
      - name: Build Solution
        run: |
          msbuild.exe Verademo-dotnet.sln  /nologo /nr:false /p:DeployOnBuild=true /p:DeployDefaultTarget=WebPublish /p:WebPublishMethod=FileSystem /p:DeleteExistingFiles=True /p:platform="Any CPU" /p:configuration="Release" /p:PublishUrl="../_build"
      
      # Upload the artifact to the _build directory
      - name: Upload artifact
        uses: actions/upload-artifact@v3.1.0
        with:
          name: VerademoBundle
          path: "./_build" 
      
      - name: Package solution
        run: Compress-Archive -LiteralPath _build/ -DestinationPath BuildArchive.zip
      
      - run: ls
      
       # Upload the artifact of the zip archive
      - name: Upload artifact
        uses: actions/upload-artifact@v3.1.0
        with:
          name: VerademoZip
          path: "./BuildArchive.zip" 
    
  Security:
    needs: build
    name: Veracode Upload and Scan
    runs-on: ubuntu-latest
    
    steps: 
      - name: Download Build Artifact
        uses: actions/download-artifact@v3.0.0
        with:
          name: VerademoZip
          path: "./BuildArchive.zip"
      - name: Confirm Contents
        run: ls -la
      - name: Veracode Upload And Scan
        uses: veracode/veracode-uploadandscan-action@0.2.4
        with: 
          appname: GitHub-VeraDemoDotNet
          createprofile: false
          filepath: /github/workspace/BuildArchive.zip
          vid: ${{secrets.Veracode-API-ID}}
          vkey: ${{secrets.Veracode-API-KEY}}
          sandboxname: GitHub
          
            
            
      
